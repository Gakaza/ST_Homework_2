        -:    0:Source:../samples/NextDate.cpp
        -:    0:Graph:NextDate.gcno
        -:    0:Data:NextDate.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2:Homework #2 Part 1 NextDate
        -:    3:Name: Shu-Hao Chang (Ken Chang)
        -:    4:Student ID: 0456151
        -:    5:Date: Oct 20, 2015
        -:    6:
        -:    7:Motivation:
        -:    8:- Learn the first step to write testing code coding by using XUnit (googe testing framework)
        -:    9:- Practice boundary value, equivalence class, , edge testing, and decision table based)
        -:   10:- Practice TDD (test-driven development) by google test
        -:   11:- Practice Xunit in a practical project
        -:   12:Goal:
        -:   13:- Implement the Triangle, NextDate, Commission problems by TDD
        -:   14:- Using XUnit for writing testing code
        -:   15:- In this time, we use google testing framework
        -:   16:- Analyze boundary value, equivalence class, edge values, and decision table based
        -:   17:- writing test code using these analyses
        -:   18:*/
        -:   19:#include "NextDate.h"
        -:   20:#include <iostream>
        -:   21:#include<cstdio>
        -:   22:#include<cstdlib>
        -:   23:#include<cstring>
        -:   24:#include <string>
        -:   25:using namespace std;
        -:   26:
        -:   27://determine a leap year
        7:   28:bool leapYear(int year) {
        7:   29:	if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))
        4:   30:		return true;
        -:   31:	else 
        3:   32:		return false;
        -:   33:}
       50:   34:string NextDate(int month, int day, int year){
        -:   35:	int nDay, nMonth, nYear;
        -:   36:	//testing for invalid inputs
       50:   37:	if(day > 31 || day < 1){
        2:   38:		return "invalid day";
       48:   39:	}else if(month > 13 || month < 1){
        2:   40:		return "invalid month";		
       46:   41:	}else if(year > 2016 || year < 1811){
        2:   42:		return "invalid year";
        -:   43:	}
        -:   44:	
        -:   45:	//nextDate inspection
       44:   46:	if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10){
       16:   47:		nYear = year;
       32:   48:		if(day<31){
        8:   49:			nDay = day + 1;
        8:   50:			nMonth = month;
        -:   51:		}else{
        8:   52:			nDay = 1;
        8:   53:			nMonth = month + 1;
        -:   54:		}
       28:   55:	}else if(month == 4 || month == 6 || month == 9 || month == 11){
       12:   56:		nYear = year;
       24:   57:		if(day<30){
        6:   58:			nDay = day + 1;
        6:   59:			nMonth = month;
        -:   60:		}else{
        6:   61:			nDay = 1;
        6:   62:			nMonth = month + 1;
        -:   63:		}
       16:   64:	}else if(month == 2){
       10:   65:		nYear = year;
       10:   66:		if(day<28){
        3:   67:			nDay = day + 1;
        3:   68:			nMonth = month;
        7:   69:		}else if(day == 28){
        5:   70:			if(leapYear(year)){
        2:   71:				nDay = day + 1;
        2:   72:				nMonth = month;
        -:   73:			}else{
        3:   74:				nDay = 1;
        3:   75:				nMonth = 3;
        -:   76:			}
        2:   77:		}else if(day == 29){
        2:   78:			if(leapYear(year)){
        2:   79:				nDay = 1;
        2:   80:				nMonth = 3;
        -:   81:			}else{
    #####:   82:				return "Feb and leapYear bug";
        -:   83:			}
        -:   84:		}
        6:   85:	}else if(month == 12){
        6:   86:		if(day<31){
        3:   87:			nDay = day + 1;
        3:   88:			nMonth = month;
        3:   89:			nYear = year;
        -:   90:		}else{
        3:   91:			nDay = 1;
        3:   92:			nMonth = 1;
        3:   93:			nYear = year + 1;
        -:   94:		}
        -:   95:	}else{
    #####:   96:		return "Bug, seriously";
        -:   97:	}
        -:   98:	
        -:   99:	//writing the nextDate into string format
        -:  100:	char str[100];
       44:  101:	memset(str, 0, sizeof(str));
       44:  102:	sprintf(str, "%d/%d/%d", nMonth, nDay, nYear);
       44:  103:	string nDate(str);
       44:  104:	return nDate;
        3:  105:}
